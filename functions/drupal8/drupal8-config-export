#!/bin/bash

# Include all of the functions that we need.
if [ -z ${FUNCTIONS_DIR+x} ]; then
  FUNCTIONS_DIR="${BASH_SOURCE%/*}/.."
  if [[ ! -d "$FUNCTIONS_DIR" ]]; then FUNCTIONS_DIR="$PWD/.."; fi
fi
. "$FUNCTIONS_DIR/pantheon-script-colours"
. "$FUNCTIONS_DIR/pantheon-cleanup-on-error"
. "$FUNCTIONS_DIR/pantheon-connection-mode"
. "$FUNCTIONS_DIR/pantheon-commit"
. "$FUNCTIONS_DIR/drupal8/drupal8-config-show-overridden"

##
# Check if config needs to be exported.
#
# @param string $SITENAME
#   The machine name of the site.
# @param string $MULTIDEV
#   The machine name of the multidev.
# @param int $CHECKFOROVERRIDES
#   Should the list of overrides be displayed?
#   In some scenarios they have already been shown.
##
drupal_config_export() {
  local sitename=$1
  local multidev=$2
  local checkforoverrides=$3
  local continue
  local isoverridden=0
  local shouldexport=0

  if [ "$checkforoverrides" == 1 ]; then
    echo -e "Clearing caches."
    terminus -q drush ${sitename}.${multidev} -- cache-clear all
    echo -e "Checking if config needs to be exported."
    drupal_config_show_overridden $sitename $multidev isoverridden
  fi

  if [ "$isoverridden" == 1 ] || [ "$checkforoverrides" == 0 ]; then
    if [ "$multidev" == "test" ]; then
      read -p "${UNDERLINE}Cannot export config on the test environment.  Do you want to exit (or continue)? (${BOLD}Y${NOBOLD}/N) ${NOUNDERLINE}"  exit
      case $exit in
        [Nn]) ;;
        *)
          cleanup_on_error $sitename $multidev "Cannot export configuration on test." 12
          ;;
      esac
    elif [ "$multidev" == "dev" ]; then
      read -p "${UNDERLINE}Should these overrides be exported to code before continuing (Typically you shouldn't because the dev environment often has an out-of-date databse)? (Y/${BOLD}N${NOBOLD}) ${NOUNDERLINE}" export
      case $export in
        [Yy])
          shouldexport=1
          ;;
        *) ;;
      esac
    else
      read -p "${UNDERLINE}Should these overrides be exported to code before continuing? (${BOLD}Y${NOBOLD}/N) ${NOUNDERLINE}" export
      case $export in
        [Nn]) ;;
        *)
          shouldexport=1
          ;;
      esac
    fi

    if [ "$shouldexport" == 1 ]; then
      connection_mode "$sitename" "$multidev" 'sftp'
      echo -e "Exporting config:"
      terminus drush ${sitename}.${multidev} -- config-export -y
      if [ $? != 0 ]; then
        cleanup_on_error $sitename $multidev "Error exporting configuration." 12
      fi
      commit $sitename $multidev "Regenerated configuration."
      connection_mode "$sitename" "$multidev" 'git'
    fi

  fi
}
