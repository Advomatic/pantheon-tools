#!/bin/bash

# Include all of the functions that we need.
if [ -z ${FUNCTIONS_DIR+x} ]; then
  FUNCTIONS_DIR="${BASH_SOURCE%/*}/.."
  if [[ ! -d "$FUNCTIONS_DIR" ]]; then FUNCTIONS_DIR="$PWD/.."; fi
fi
. "$FUNCTIONS_DIR/pantheon-script-colours"
. "$FUNCTIONS_DIR/pantheon-cleanup-on-error"
. "$FUNCTIONS_DIR/drupal/drupal-check-if-module-installed"
. "$FUNCTIONS_DIR/drupal8/drupal8-config-show-overridden"
. "$FUNCTIONS_DIR/drupal8/drupal8-config-export"

###
# Determine Drush version.
#
# @param string $SITENAME
#   The machine name of the site.
# @param string $MULTIDEV
#   The machine name of the multidev.
# @param $HASCONFIGMANAGEMENT
#   Will be overwritten with the either 1 (true) or 0 (false).
###
drupal8_check_config_management() {
  local sitename=$1
  local multidev=$2
  local hasconfigmanagement=1

  echo -e "Checking if Config module is installed."
  drupal_check_if_module_installed $sitename $multidev "config"
  if [ $? == 0 ]; then
    hasconfigmanagement=0
    eval "$3='$hasconfigmanagement'"
    return;
  fi

  echo -e "Checking if Configuration Split module is installed."
  drupal_check_if_module_installed $sitename $multidev "config_split"
  if [ $? == 0 ]; then
    echo -e "{$INVERSE}This site is not using Configuration Split module.  Please set that up before continuing. See:{$NOINVERSE}"
    echo -e "  https://www.advomatic.com/blog/using-configuration-split-to-have-dev-only-configuration-in-drupal-8"
    exit 8
  fi

  eval "$3='$hasconfigmanagement'"

  echo -e "Checking if config is overridden on ${multidev}."
  local isoverridden=0
  drupal_config_show_overridden $sitename $multidev isoverridden
  if [ "$isoverridden" == 1 ]; then
    drupal_config_export $sitename $multidev 0
  fi
}

