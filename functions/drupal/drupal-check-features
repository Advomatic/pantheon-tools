#!/bin/bash

# Include all of the functions that we need.
if [ -z ${FUNCTIONS_DIR+x} ]; then
  FUNCTIONS_DIR="${BASH_SOURCE%/*}/.."
  if [[ ! -d "$FUNCTIONS_DIR" ]]; then FUNCTIONS_DIR="$PWD/.."; fi
fi
. "$FUNCTIONS_DIR/pantheon-cleanup-on-error"
. "$FUNCTIONS_DIR/pantheon-connection-mode"
. "$FUNCTIONS_DIR/pantheon-script-colours"
. "$FUNCTIONS_DIR/drupal/drupal-check-if-module-installed"
. "$FUNCTIONS_DIR/drupal/drupal-regenerate-features"

###
# Check if Features module is enabled.
#
# @param string $SITENAME
#   The machine name of the site.
# @param string $MULTIDEV
#   The machine name of the multidev.
#
# @return int
#   1 if it has Features module, else 0.
###
drupal_check_features() {
  local sitename=$1
  local multidev=$2
  local hasfeatures=1

  echo -e "Checking if Features module is installed."
  drupal_check_if_module_installed $sitename $multidev "features"
  if [ $? == 0 ]; then
    hasfeatures=0
    return $hasfeatures;
  fi
  echo -e "Checking if features are overridden on ${multidev}."
  local overridden=`terminus drush ${sitename}.${multidev} -- features-list --status=enabled --fields=feature,state 2>/dev/null | grep 'Needs review\|Overridden'`
  if [ "$overridden" != "" ]; then
    echo -e ""
    echo -e "$overridden"
    echo -e ""
    echo -e "There are features overrides.  These should be probably be cleaned up first."
    if [ "$multidev" == 'test' ]; then
      read -p "${UNDERLINE}Cannot export config on the test environment.
      [exit] so that you can clean up manually.
      [continue] on to the next step without making changes.${NOUNDERLINE} " continue;
    else
      read -p "${UNDERLINE}[exit] so that you can clean up manually.
[auto] clean-up automatically (save all overrides to code, warning: only choose this if this environment has a fresh copy of the live database, or if these are your own changes that need to get stored in code).
[continue] on to the next step without making changes.${NOUNDERLINE} " continue;
    fi
    # We can't assume that an auto cleanup should be default.  If we come across
    # overrides on dev it might be because the DB hasn't been refreshed in a
    # while.
    if [ "$continue" == "" ]; then
      continue="exit"
    fi
    if [ "$continue" == "exit" ]; then
      echo -e "You can clean up the features on this branch.  Then you can re-run this script to continue."
      exit 0
    elif [ "$continue" == "auto" ]; then
      # In a perfect world we should only switch if it's not already set to SFTP
      # And only change back if necessary.  But there's no Terminus command to
      # do that.
      connection_mode "$sitename" "$multidev" 'sftp'
      drupal_regenerate_features $sitename $multidev
      connection_mode "$sitename" "$multidev" 'git'
    fi
  fi
  return $hasfeatures;
}

